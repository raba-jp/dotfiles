[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_smart_case = 1
  inoremap <silent><expr> <TAB> 
    \  pumvisible() ? "\<C-n>" :
    \  neosnippet#expandable_or_jumpable() ?
    \  "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
  inoremap <expr><BS> deoplete#smart_close_popup()."\<C-h>"
  inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
  function! s:my_cr_function() abort
    return deoplete#close_popup() . "\<CR>"
  endfunction
  let g:deoplete#omni#input_patterns = {}
  let g:deoplete#omni#input_patterns.ruby = ['[^. *\t]\.\w*', '[a-zA-Z_]\w*::']
  let g:deoplete#omni#functions = {}
  let g:deoplete#omni#functions.ruby = 'rubycomplete#Complete'
'''

[[plugins]]
repo = 'Shougo/neosnippet'
on_i  = 1
on_ft = 'snippet'
depends = ['neosnippet-snippets']'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_max_signs = -1
  let g:ale_sign_column_always = 1
  let g:ale_fix_on_save = 1
  let g:ale_echo_msg_error_str = ''
  let g:ale_echo_msg_warning_str = ''
  let g:ale_echo_msg_format = '[%linter%] %s'
  let g:ale_sign_error = '>>'
  let g:ale_sign_warning = '--'
  let g:ale_set_loclist = 0
  let g:ale_set_quickfix = 0
  let g:ale_open_list = 0
  let g:ale_keep_list_window_open = 0
  nmap <silent> <C-k> <Plug>(ale_previous_wrap)
  nmap <silent> <C-j> <Plug>(ale_next_wrap)
  let g:ale_lint_on_text_changed = 'always'
  let g:ale_lint_on_enter = 0
  let g:ale_statusline_format = [ "> %s","> %s", ""]
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'Shougo/context_filetype.vim'

## Ruby
[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = 'ruby'
hook_source = '''
  let g:ruby_indent_access_modifier_style = 'normal'
  let g:ruby_indent_block_style = 'do'
  let g:ruby_indent_assignment_style = 'hanging'
'''

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = 'ruby'

[[plugins]]
repo = 'vim-utils/vim-ruby-fold'
on_ft = 'ruby'
hook_source = '''
  let g:ruby_fold_lines_limit = 100
'''

[[plugins]]
repo = 'todesking/ruby_hl_lvar.vim'
on_ft = 'ruby'

[[plugins]]
repo = 'Shougo/deoplete-rct'
on_i = 1
on_ft = 'ruby'
depends = 'deoplete.nvim'

## Go
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'jodosha/vim-godebug'
on_ft = 'go'
if = "has('nvim')"

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_ft = 'go'
on_i = 1
depends = 'deoplete.nvim'
hook_add = '''
  let g:deoplete#sources#go#gocode_binary = $GOPATH . '/bin/gocode'
  let g:deoplete#sources#go#package_dot = 1
  let g:deoplete#sources#go#sort_class = ['package', 'const', 'var', 'type', 'func']
  let g:deoplete#sources#go#use_cache = 1
  let g:deoplete#sources#go#json_directory = $XDG_CACHE_HOME.'/go'
'''

## Python
[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = 'python'
on_i = 1
depends = 'deoplete.nvim'

## Swift
[[plugins]]
repo = 'kballard/vim-swift'
on_ft = 'swift'

[[plugins]]
repo = 'landaire/deoplete-swift'
on_i = 1
on_ft = 'swift'
depends = 'deoplete.nvim'

## Vim
[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'
on_i = 1
depends = 'deoplete.nvim'

## fish shell
[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

[[plugins]]
repo = 'ponko2/deoplete-fish'
on_ft = 'fish'
on_i = 1
depends = 'deoplete.nvim'

## Terraform
[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'terraform'
hook_source = '''
  let g:terraform_align=1
  let g:terraform_fmt_on_save = 1
'''

## YAML
[[plugins]]
repo = 'stephpy/vim-yaml'
on_ft = 'yaml'

## TOML
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'
